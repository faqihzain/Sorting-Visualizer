{"version":3,"sources":["components/Toolbar/Toolbar.jsx","reducers/array/index.js","reducers/algorithm/index.js","reducers/sorted/index.js","reducers/running/index.js","reducers/bubbleSort/index.js","reducers/swappers/index.js","algorithms/bubbleSort.js","reducers/quickSort/index.js","algorithms/quickSort.js","reducers/heapSort/index.js","algorithms/heapSort.js","reducers/mergeSort/index.js","algorithms/mergeSort.js","components/Toolbar/ToolbarContainer.js","components/Body/Body.jsx","components/Body/BodyContainer.js","components/Main.jsx","components/MainContainer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["Toolbar","props","handleClick","bind","handleChange","generateArray","this","document","getElementById","value","algorithm","updateAlgorithm","evt","Math","floor","parseInt","target","array","sort","isRunning","speed","pow","length","color","cursor","id","style","onClick","className","type","min","max","background","disabled","onChange","Component","setArray","createAction","handleActions","SET_ARRAY","state","payload","setAlgorithm","SET_ALGORITHM","setCurrentSorted","currentSorted","SET_CURRENT_SORTED","concat","setRunning","SET_RUNNING","setCurrentBubbleTwo","currentBubbleTwo","SET_CURRENT_BUBBLETWO","setCurrentSwappers","currentSwappers","SET_CURRENT_SWAPPERS","bubbleSort","stateArray","dispatch","slice","toDispatch","sorted","round","i","push","temp","handleDispatch","map","num","index","setTimeout","dispatchFunction","shift","setCurrentQuickTwo","setPivot","currentQuickTwo","SET_CURRENT_QUICKTWO","pivot","SET_PIVOT","quickSort","quickSortHelper","start","end","left","right","Array","setCurrentHeapThree","currentHeapThree","SET_CURRENT_HEAPTHREE","siftDown","swap","heapSort","currentIndex","buildMaxHeap","setCurrentMergeX","currentMergeX","SET_CURRENT_MERGEX","mergeSort","finalArray","mergeSortHelper","obj","half","first","second","indexHalf","actualFirst","actualSecond","isFinalMerge","sortedArray","indexToPush","forEach","subArr","actualSort","idx","currentToDispatch","connect","random","doSort","Body","numWidth","width","numMargin","margin","fontSize","number","backgroundColor","includes","key","height","marginLeft","marginRigh","Main","combineReducers","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b9fc66f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Toolbar.css\";\r\n\r\nclass Toolbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { generateArray } = this.props;\r\n\r\n    generateArray(87);\r\n    document.getElementById(\"changeSize\").value = 50;\r\n  }\r\n\r\n  handleClick(algorithm) {\r\n    const { updateAlgorithm } = this.props;\r\n\r\n    updateAlgorithm(algorithm);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    const { generateArray } = this.props;\r\n\r\n    generateArray(Math.floor((parseInt(evt.target.value) + 3) * 1.65));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      array,\r\n      algorithm,\r\n      generateArray,\r\n      sort,\r\n      isRunning,\r\n    } = this.props;\r\n\r\n    const speed = 570 - Math.pow(array.length, 2) > 0 ?\r\n      570 - Math.pow(array.length, 2) : 0;\r\n\r\n    const color = isRunning ? \"rgba(27, 205, 211, 0.8)\" : \"white\";\r\n\r\n    const cursor = isRunning ? \"auto\" : \"pointer\";\r\n\r\n    return (\r\n      <div id=\"toolbar\">\r\n        <div\r\n          id={!isRunning ? \"generateArray\" : \"generateArrayX\"}\r\n          style={{color: color, cursor: cursor}}\r\n          onClick={!isRunning ? () => generateArray(array.length) : null}>\r\n          Generate New Array\r\n        </div>\r\n        <div className=\"separator\"></div>\r\n        <div\r\n          id=\"arraySize\"\r\n          style={{color: color}}>\r\n          Change Array Size & Sorting Speed\r\n        </div>\r\n        <input\r\n          id=\"changeSize\"\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          style={{background: color, cursor: cursor}}\r\n          disabled={isRunning ? \"disabled\" : null}\r\n          onChange={this.handleChange}\r\n          />\r\n        <div className=\"separator\"></div>\r\n        <div\r\n          className={algorithm === \"mergeSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n          onClick={() => this.handleClick(\"mergeSort\")}>\r\n          Merge Sort\r\n        </div>\r\n        <div\r\n          className={algorithm === \"quickSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n          onClick={() => this.handleClick(\"quickSort\")}>\r\n          Quick Sort\r\n        </div>\r\n        <div\r\n          className={algorithm === \"heapSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n          onClick={() => this.handleClick(\"heapSort\")}>\r\n          Heap Sort\r\n        </div>\r\n        <div\r\n          className={algorithm === \"bubbleSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n          onClick={() => this.handleClick(\"bubbleSort\")}>\r\n          Bubble Sort\r\n        </div>\r\n        <div className=\"separator\"></div>\r\n        { algorithm ? <div\r\n            id=\"sort\"\r\n            style={{color: color, cursor: cursor}}\r\n            onClick={!isRunning ? () => sort(algorithm, array, speed) : null}>\r\n            Sort!\r\n          </div> : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Toolbar;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_ARRAY = \"SET_ARRAY\";\r\nexport const setArray = createAction(SET_ARRAY);\r\n\r\nexport const array = handleActions({\r\n  SET_ARRAY: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialState);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = \"\";\r\n\r\nexport const SET_ALGORITHM = \"SET_ALGORITHM\";\r\nexport const setAlgorithm = createAction(SET_ALGORITHM);\r\n\r\nexport const algorithm = handleActions({\r\n  SET_ALGORITHM: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialState);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_SORTED = \"SET_CURRENT_SORTED\";\r\nexport const setCurrentSorted = createAction(SET_CURRENT_SORTED);\r\n\r\nexport const currentSorted = handleActions({\r\n  SET_CURRENT_SORTED: (state, { payload }) => {\r\n    if (payload.length) {\r\n      return state.concat(payload);\r\n    } else {\r\n      return [];\r\n    }\r\n  },\r\n}, initialState);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = false;\r\n\r\nexport const SET_RUNNING = \"SET_RUNNING\";\r\nexport const setRunning = createAction(SET_RUNNING);\r\n\r\nexport const isRunning = handleActions({\r\n  SET_RUNNING: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialState);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_BUBBLETWO = \"SET_CURRENT_BUBBLETWO\";\r\nexport const setCurrentBubbleTwo = createAction(SET_CURRENT_BUBBLETWO);\r\n\r\nexport const currentBubbleTwo = handleActions({\r\n  SET_CURRENT_BUBBLETWO: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialState);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_SWAPPERS = \"SET_CURRENT_SWAPPERS\";\r\nexport const setCurrentSwappers = createAction(SET_CURRENT_SWAPPERS);\r\n\r\nexport const currentSwappers = handleActions({\r\n  SET_CURRENT_SWAPPERS: (state, { payload }) => {\r\n    if (payload.length) {\r\n      return state.concat(payload);\r\n    } else {\r\n      return [];\r\n    }\r\n  },\r\n}, initialState);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentBubbleTwo } from \"../reducers/bubbleSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction bubbleSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0),\r\n      toDispatch = [],\r\n      sorted = false,\r\n      round = 0;\r\n  while (!sorted) {\r\n    sorted = true;\r\n    for (let i = 0; i < array.length - 1 - round; i++) {\r\n      toDispatch.push([i, i + 1]);\r\n      if (array[i] > array[i + 1]) {\r\n        toDispatch.push([i, i + 1, true]);\r\n        let temp = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = temp;\r\n        sorted = false;\r\n        toDispatch.push(array.slice(0));\r\n        toDispatch.push([]);\r\n      }\r\n    }\r\n    toDispatch.push([true, array.length - 1 - round]);\r\n    round++;\r\n  }\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setCurrentBubbleTwo(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentBubbleTwo([]));\r\n      dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction = toDispatch[0].length > 3 ?\r\n    setArray : toDispatch[0].length === 3 || toDispatch[0].length === 0 ?\r\n      setCurrentSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n        setCurrentSorted : setCurrentBubbleTwo;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default bubbleSort;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialStateOne = [];\r\nconst initialStateTwo = null;\r\n\r\nexport const SET_CURRENT_QUICKTWO = \"SET_CURRENT_QUICKTWO\";\r\nexport const setCurrentQuickTwo = createAction(SET_CURRENT_QUICKTWO);\r\nexport const SET_PIVOT = \"SET_PIVOT\";\r\nexport const setPivot = createAction(SET_PIVOT);\r\n\r\nexport const currentQuickTwo = handleActions({\r\n  SET_CURRENT_QUICKTWO: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialStateOne);\r\nexport const pivot = handleActions({\r\n  SET_PIVOT: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialStateTwo);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentQuickTwo, setPivot } from \"../reducers/quickSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction quickSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0),\r\n      toDispatch = [];\r\n  quickSortHelper(array, 0, array.length - 1, toDispatch);\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction quickSortHelper(array, start, end, toDispatch) {\r\n  if (start >= end) {\r\n    toDispatch.push([true, start]);\r\n    return;\r\n  }\r\n  let pivot = start,\r\n      left = start + 1,\r\n      right = end;\r\n  toDispatch.push(pivot);\r\n  toDispatch.push([left, right]);\r\n  while (right >= left) {\r\n    if (array[right] < array[pivot] && array[left] > array[pivot]) {\r\n      toDispatch.push([left, right, true]);\r\n      let temp = array[right];\r\n      array[right] = array[left];\r\n      array[left] = temp;\r\n      toDispatch.push(array.slice(0));\r\n      toDispatch.push([]);\r\n    }\r\n    if (array[right] >= array[pivot]) {\r\n      right--;\r\n    }\r\n    if (array[left] <= array[pivot]) {\r\n      left++;\r\n    }\r\n    if (right >= left) toDispatch.push([left, right]);\r\n  }\r\n  toDispatch.push([pivot, right]);\r\n  if (pivot !== right) {\r\n    let temp = array[right];\r\n    array[right] = array[pivot];\r\n    array[pivot] = temp;\r\n    toDispatch.push([pivot, right, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    toDispatch.push([true, right]);\r\n  }\r\n  quickSortHelper(array, start, right - 1, toDispatch);\r\n  quickSortHelper(array, right + 1, end, toDispatch);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setPivot(null));\r\n    dispatch(setCurrentQuickTwo(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentQuickTwo([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction = !(toDispatch[0] instanceof Array) ?\r\n    setPivot : toDispatch[0].length > 3 ?\r\n      setArray : toDispatch[0].length !== 2 ?\r\n        setCurrentSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n          setCurrentSorted : setCurrentQuickTwo;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  if (dispatchFunction === setPivot) dispatch(setCurrentQuickTwo(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default quickSort;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_HEAPTHREE = \"SET_CURRENT_HEAPTHREE\";\r\nexport const setCurrentHeapThree = createAction(SET_CURRENT_HEAPTHREE);\r\n\r\nexport const currentHeapThree = handleActions({\r\n  SET_CURRENT_HEAPTHREE: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialState);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentHeapThree } from \"../reducers/heapSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction heapSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0),\r\n      toDispatch = [];\r\n  buildMaxHeap(array, toDispatch);\r\n  let end = array.length - 1;\r\n  while (end > 0) {\r\n    toDispatch.push([0, end]);\r\n    let temp = array[end];\r\n    array[end] = array[0];\r\n    array[0] = temp;\r\n    toDispatch.push([0, end, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    toDispatch.push([true, end]);\r\n    siftDown(array, 0, end, toDispatch);\r\n    end--;\r\n  }\r\n  toDispatch.push([true, end]);\r\n  handleDispatch(toDispatch, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction buildMaxHeap(array, toDispatch) {\r\n  let currentIndex = Math.floor(array.length / 2);\r\n  while (currentIndex >= 0) {\r\n    siftDown(array, currentIndex, array.length, toDispatch);\r\n    currentIndex--;\r\n  }\r\n}\r\n\r\nfunction siftDown(array, start, end, toDispatch) {\r\n  if (start >= Math.floor(end / 2)) {\r\n    return;\r\n  }\r\n  let left = start * 2 + 1,\r\n      right = start * 2 + 2 < end ? start * 2 + 2 : null,\r\n      swap;\r\n  if (right) {\r\n    toDispatch.push([start, left, right]);\r\n    swap = array[left] > array[right] ? left : right;\r\n  } else {\r\n    toDispatch.push([start, left]);\r\n    swap = left;\r\n  }\r\n  if (array[start] < array[swap]) {\r\n    let temp = array[swap];\r\n    array[swap] = array[start];\r\n    array[start] = temp;\r\n    toDispatch.push([start, swap, true]);\r\n    toDispatch.push(array.slice(0));\r\n    toDispatch.push([]);\r\n    siftDown(array, swap, end, toDispatch);\r\n  }\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setCurrentHeapThree(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentHeapThree([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction = toDispatch[0].length > 3 ?\r\n      setArray : toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\" || !toDispatch[0].length ?\r\n        setCurrentSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n          setCurrentSorted : setCurrentHeapThree;\r\n  dispatch(dispatchFunction(toDispatch.shift()));\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default heapSort;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_MERGEX = \"SET_CURRENT_MERGEX\";\r\nexport const setCurrentMergeX = createAction(SET_CURRENT_MERGEX);\r\n\r\nexport const currentMergeX = handleActions({\r\n  SET_CURRENT_MERGEX: (state, { payload }) => {\r\n    return payload;\r\n  },\r\n}, initialState);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentMergeX } from \"../reducers/mergeSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction mergeSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0),\r\n      toDispatch = [];\r\n  let finalArray = mergeSortHelper(array.map((num, idx) => [num, idx]), toDispatch, 0, array.length - 1, {array: array.slice(0)});\r\n  handleDispatch(toDispatch, dispatch, finalArray, speed);\r\n}\r\n\r\nfunction mergeSortHelper(array, toDispatch, start, end, obj) {\r\n  if (array.length === 1) {\r\n    return array;\r\n  }\r\n  let half = Math.floor(array.length / 2),\r\n      first = array.slice(0, half),\r\n      second = array.slice(half),\r\n      indexHalf = Math.floor((end + 1 + start) / 2),\r\n      actualFirst = mergeSortHelper(first, toDispatch, start, indexHalf - 1, obj),\r\n      actualSecond = mergeSortHelper(second, toDispatch, indexHalf, end, obj),\r\n      isFinalMerge = false;\r\n  if (actualFirst.length + actualSecond.length === obj.array.length) isFinalMerge = true;\r\n  return actualSort(actualFirst, actualSecond, toDispatch, obj, start, end, isFinalMerge);\r\n}\r\n\r\nfunction actualSort(first, second, toDispatch, obj, start, end, isFinalMerge) {\r\n  let sortedArray = [];\r\n  let indexToPush = start;\r\n  while (first.length && second.length) {\r\n    toDispatch.push([first[0][1], second[0][1]]);\r\n    if (first[0][0] <= second[0][0]) {\r\n      indexToPush++;\r\n      sortedArray.push(first.shift());\r\n    } else {\r\n      toDispatch.push([first[0][1], second[0][1], true]);\r\n      second[0][1] = indexToPush++;\r\n      sortedArray.push(second.shift());\r\n      first.forEach(subArr => subArr[1]++);\r\n      if (start === 0) {\r\n        obj.array = sortedArray.map(subArr => subArr[0]).concat(first.map(subArr => subArr[0])).concat(second.map(subArr => subArr[0])).concat(obj.array.slice(end + 1));\r\n      } else {\r\n        obj.array = obj.array.slice(0, start).concat(sortedArray.map(subArr => subArr[0])).concat(first.map(subArr => subArr[0])).concat(second.map(subArr => subArr[0])).concat(obj.array.slice(end + 1));\r\n      }\r\n      toDispatch.push(obj.array.concat([indexToPush - 1, indexToPush]));\r\n      toDispatch.push([]);\r\n    }\r\n    if (isFinalMerge) toDispatch.push([true, indexToPush - 1]);\r\n  }\r\n  return sortedArray.concat(first).concat(second);\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n  if (!toDispatch.length) {\r\n    dispatch(setCurrentMergeX(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentMergeX([]));\r\n      dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction = toDispatch[0].length > 3 ?\r\n    setArray : toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\" || toDispatch[0].length === 0 ?\r\n      setCurrentSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n        setCurrentSorted : setCurrentMergeX;\r\n  if (dispatchFunction === setArray) {\r\n    let currentToDispatch = toDispatch.shift();\r\n    dispatch(dispatchFunction(currentToDispatch.slice(0, currentToDispatch.length - 2)));\r\n    dispatch(setCurrentSwappers([]));\r\n    dispatch(setCurrentMergeX([]));\r\n    dispatch(setCurrentSwappers([currentToDispatch[currentToDispatch.length - 2], currentToDispatch[currentToDispatch.length - 1]]));\r\n    dispatch(setCurrentMergeX([currentToDispatch[currentToDispatch.length - 2], currentToDispatch[currentToDispatch.length - 1]]));\r\n  } else {\r\n    dispatch(dispatchFunction(toDispatch.shift()));\r\n  }\r\n  setTimeout(() => {\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default mergeSort;\r\n","import { connect } from \"react-redux\";\r\nimport Toolbar from \"./Toolbar.jsx\";\r\nimport { setArray } from \"../../reducers/array\";\r\nimport { setAlgorithm } from \"../../reducers/algorithm\";\r\nimport { setCurrentSorted } from \"../../reducers/sorted\";\r\nimport { setRunning } from \"../../reducers/running\";\r\nimport bubbleSort from \"../../algorithms/bubbleSort.js\";\r\nimport quickSort from \"../../algorithms/quickSort.js\";\r\nimport heapSort from \"../../algorithms/heapSort.js\";\r\nimport mergeSort from \"../../algorithms/mergeSort.js\";\r\n\r\nconst mapStateToProps = ({\r\n  array,\r\n  algorithm,\r\n  isRunning,\r\n}) => ({\r\n  array,\r\n  algorithm,\r\n  isRunning,\r\n});\r\n\r\nconst mapDispatchToProps = () => dispatch => ({\r\n  generateArray: (length) => {\r\n    let array = [];\r\n    while (array.length < length) {\r\n      array.push(Math.floor(Math.random() * 200) + 10);\r\n    }\r\n    dispatch(setArray(array));\r\n    dispatch(setCurrentSorted([]));\r\n  },\r\n\r\n  updateAlgorithm: (algorithm) => {\r\n    dispatch(setAlgorithm(algorithm));\r\n  },\r\n\r\n  sort: (algorithm, array, speed) => {\r\n    let doSort = algorithm === \"bubbleSort\" ?\r\n      bubbleSort : algorithm === \"quickSort\" ?\r\n        quickSort : algorithm === \"heapSort\" ?\r\n          heapSort : algorithm === \"mergeSort\" ?\r\n            mergeSort : null;\r\n    dispatch(setCurrentSorted([]));\r\n    dispatch(setRunning(true));\r\n    doSort(array, dispatch, speed);\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\r\n","import React, { Component } from \"react\";\r\nimport \"./Body.css\";\r\n\r\nclass Body extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      array,\r\n      currentBubbleTwo,\r\n      currentQuickTwo,\r\n      pivot,\r\n      currentSwappers,\r\n      currentHeapThree,\r\n      currentSorted,\r\n      currentMergeX,\r\n    } = this.props;\r\n\r\n    const numWidth = Math.floor(3000 / (array.length * 3));//tanda\r\n    const width = `${numWidth}px`;\r\n    const numMargin = array.length < 5 ?\r\n      10 : array.length < 8 ?\r\n        8 : array.length < 11 ?\r\n          6 : array.length < 20 ?\r\n            4 : array.length < 50 ?\r\n              3.5 : array.length < 100 ?\r\n                3 : array.length < 130 ?\r\n                  2.5 : 2;\r\n    const margin = `${numMargin}px`;\r\n    const color = numWidth > 20 ? \"white\" : \"transparent\";\r\n    const numFont = numWidth > 70 ?\r\n      20 : numWidth > 60 ?\r\n        18 : numWidth > 50 ?\r\n          16 : numWidth > 40 ?\r\n            14 : numWidth > 30 ?\r\n              12 : numWidth > 20 ?\r\n                10 : 8;\r\n    const fontSize = `${numFont}px`\r\n\r\n    return (\r\n      <div id=\"bodyContainer\">\r\n        { array.length ? array.map((number, index) => {\r\n          const backgroundColor = currentSwappers.includes(index) ?\r\n              \"rgba(219, 57, 57, 0.8)\" : currentBubbleTwo.includes(index) ||\r\n              currentQuickTwo.includes(index) || currentHeapThree.includes(index) ||\r\n              currentMergeX.includes(index) ?\r\n                \"rgba(78, 216, 96, 0.8)\" : pivot === index ?\r\n                  \"rgba(237, 234, 59, 0.8)\" : currentSorted.includes(index) ?\r\n                    \"rgba(169, 92, 232, 0.8)\" : \"rgba(211, 25, 102, 0.8)\";\r\n          return <div\r\n            className=\"arrayElement\"\r\n            key={index}\r\n            style={{height: `${number * 3}px`, width: width, marginLeft: margin, marginRigh: margin, backgroundColor: backgroundColor, color: color, fontSize: fontSize}}>\r\n            {number}\r\n          </div>\r\n        }) : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import { connect } from \"react-redux\";\r\nimport Body from \"./Body.jsx\";\r\n\r\nconst mapStateToProps = ({\r\n  array,\r\n  currentBubbleTwo,\r\n  currentQuickTwo,\r\n  pivot,\r\n  currentSwappers,\r\n  currentHeapThree,\r\n  currentSorted,\r\n  currentMergeX,\r\n}) => ({\r\n  array,\r\n  currentBubbleTwo,\r\n  currentQuickTwo,\r\n  pivot,\r\n  currentSwappers,\r\n  currentHeapThree,\r\n  currentSorted,\r\n  currentMergeX,\r\n});\r\n\r\nconst mapDispatchToProps = () => dispatch => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);\r\n","import React, { Component } from \"react\";\r\nimport Toolbar from \"./Toolbar/ToolbarContainer.js\"\r\nimport Body from \"./Body/BodyContainer.js\"\r\nimport \"./Main.css\"\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Toolbar />\r\n        <Body />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import { connect } from \"react-redux\";\r\nimport Main from \"./Main.jsx\";\r\n\r\nconst mapStateToProps = ({\r\n\r\n}) => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = () => dispatch => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import { combineReducers } from \"redux\";\r\nimport { array } from \"./array\";\r\nimport { algorithm } from \"./algorithm\";\r\nimport { currentBubbleTwo } from \"./bubbleSort\";\r\nimport { currentQuickTwo, pivot } from \"./quickSort\";\r\nimport { currentSwappers } from \"./swappers\";\r\nimport { currentHeapThree } from \"./heapSort\";\r\nimport { currentSorted } from \"./sorted\";\r\nimport { currentMergeX } from \"./mergeSort\";\r\nimport { isRunning } from \"./running\";\r\n\r\nexport default combineReducers({\r\n  array,\r\n  algorithm,\r\n  currentBubbleTwo,\r\n  currentQuickTwo,\r\n  pivot,\r\n  currentSwappers,\r\n  currentHeapThree,\r\n  currentSorted,\r\n  currentMergeX,\r\n  isRunning,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport Main from \"./components/MainContainer.js\";\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n      <Main />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}